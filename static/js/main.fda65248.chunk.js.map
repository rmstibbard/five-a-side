{"version":3,"sources":["components/Header/Header.js","components/NumbersReached/NumbersReached.js","components/NumbersReached/index.js","components/AddPlayer/AddPlayer.js","components/AddPlayer/index.js","data/actions.js","components/DisplayTeams/DisplayTeams.js","components/DisplayTeams/index.js","App.js","data/initialState.js","data/reducer.js","data/store.js","index.js"],"names":["Header","className","NumbersReached","playersList","numbersReached","length","connect","state","AddPlayer","props","playerName","handleChange","bind","handleSubmit","handleReset","e","this","setState","currentTarget","value","preventDefault","Fragment","onSubmit","placeholder","type","onChange","disabled","onClick","Component","dispatch","data","player","name","addPlayer","DisplayTeams","teamA","teamB","map","index","key","App","initialState","shuffledList","action","reducer","filter","createTeams","sort","Math","random","shufflePlayers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fda65248.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header\">\r\n      <h1>Five-A-Side Footy Fun</h1>\r\n      <p>by Richard Stibbard</p>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nconst NumbersReached = ({ playersList, numbersReached }) => (\r\n  <div>\r\n    {numbersReached ?\r\n      < h2 className='numbers-reached'>Teams Complete</h2> :\r\n      <h2 className='numbers-reached'>Add {10 - playersList.length} more players</h2>}\r\n  </div >\r\n);\r\n\r\nexport default NumbersReached;","import { connect } from \"react-redux\";\r\nimport NumbersReached from \"./NumbersReached\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ...state,\r\n    numbersReached: state.playersList.length >= 10 // For five-a-side\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(NumbersReached);","import React, { Component } from 'react';\r\nimport NumbersReached from '../NumbersReached';\r\n\r\nclass AddPlayer extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      playerName: props.playerName,\r\n      numbersReached: props.numbersReached\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleReset = this.handleReset.bind(this);\r\n  };\r\n\r\n  handleChange(e) {\r\n    this.setState({ playerName: e.currentTarget.value });\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    this.props.handleSubmit({ ...this.state });\r\n  }\r\n\r\n  handleReset(e) {\r\n    e.preventDefault();\r\n    this.props.handleReset({ ...this.state });\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <form className=\"entry-form\" onSubmit={this.handleSubmit}>\r\n          <input\r\n            placeholder=\"Enter a player's name\"\r\n            className=\"player-input\"\r\n            type=\"text\"\r\n            onChange={this.handleChange}\r\n            disabled={this.props.numbersReached}\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            className=\"player-submit\"\r\n            disabled={this.props.numbersReached}\r\n          >\r\n            Add a player\r\n          </button>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"reset-teams\"\r\n            onClick={this.handleReset}>\r\n            Reset teams\r\n            </button>\r\n          <NumbersReached />\r\n        </form>\r\n\r\n      </React.Fragment>\r\n    )\r\n\r\n  }\r\n};\r\n\r\nexport default AddPlayer;","import { connect } from \"react-redux\";\r\nimport AddPlayer from \"./AddPlayer\";\r\nimport { addPlayer } from \"../../data/actions\";\r\nimport { reset } from \"../../data/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    playerName: state.playerName,\r\n    numbersReached: state.numbersReached\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    handleReset: () => dispatch(reset()),\r\n    handleSubmit: (data) => dispatch(addPlayer(data)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddPlayer);","export const addPlayer = (data) => {\r\n  return {\r\n    type: \"ADD_PLAYER\",\r\n    player: {\r\n      name: data.playerName,\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport const createTeams = (data) => {\r\n  return {\r\n    type: \"CREATE_TEAMS\",\r\n    player: {\r\n      name: data.playerName,\r\n    }\r\n  };\r\n};\r\n\r\nexport const reset = () => {\r\n  return {\r\n    type: \"RESET\",\r\n  }\r\n}\r\n\r\n","import React from \"react\";\r\n\r\nconst DisplayTeams = ({ playersList, teamA, teamB }) => (\r\n  <React.Fragment>\r\n    <div className=\"game\">\r\n\r\n      <div>\r\n        {playersList.length < 10 ?\r\n          <div className=\"players-list-title\">\r\n            <p>Players to sort</p>\r\n            <ul className=\"players-list\">\r\n              {playersList.length < 10 ?\r\n                playersList.map((player, index) => (\r\n                  <li key={index}>{player.name}</li>\r\n                )) : null}\r\n            </ul>\r\n          </div> :\r\n          null\r\n        }\r\n\r\n        <div className=\"team-a-title\">\r\n          <p>Team A</p>\r\n          <ul className=\"team-a-players\">\r\n            {playersList.length === 10 ?\r\n              teamA.map((player, index) => (\r\n                <li key={index}>{player.name}</li>\r\n              )) :\r\n              <p>Thinking ...</p>\r\n            }\r\n          </ul>\r\n        </div>\r\n\r\n        <div>\r\n          <div className=\"team-b-title\">\r\n            <p>Team B</p>\r\n            <ul className=\"team-b-players\">\r\n              {playersList.length === 10 ?\r\n                teamB.map((player, index) => (\r\n                  <li key={index}>{player.name}</li>\r\n                )) : <p>Thinking ...</p>\r\n              }\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </React.Fragment>\r\n);\r\n\r\nexport default DisplayTeams;","import { connect } from \"react-redux\";\r\nimport DisplayTeams from \"./DisplayTeams\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    playersList: state.playersList,\r\n    teamA: state.teamA,\r\n    teamB: state.teamB\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(DisplayTeams);","import React from 'react';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport AddPlayer from './components/AddPlayer'; // Has container file\n// import ListPlayers from './components/ListPlayers';\n// import CreateTeams from './components/CreateTeams';\nimport DisplayTeams from './components/DisplayTeams';\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Header />\n      <AddPlayer />\n      <DisplayTeams />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","export const initialState = {\r\n  playersList: [],\r\n  shuffledList: [],\r\n  teamA: [],\r\n  teamB: [],\r\n  numbersReached: false\r\n};\r\n\r\nexport default initialState;","import initialState from './initialState';\r\n\r\nconst addPlayer = (state, action) => {\r\n  return {\r\n    ...state,\r\n    playersList: [...state.playersList, action.player]\r\n  }\r\n};\r\n\r\n// Simple random sort: https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\r\nconst shufflePlayers = (state) => {\r\n  return {\r\n    ...state,\r\n    shuffledList: [\r\n      ...state.playersList.sort(() => Math.random() - 0.5)\r\n    ]\r\n  }\r\n}\r\n\r\nconst createTeams = (state) => {\r\n  if (state.shuffledList.length <= 10) {\r\n    let teamA = state.shuffledList.filter((playerName, index) => index % 2 === 0);\r\n    let teamB = state.shuffledList.filter((playerName, index) => index % 2 !== 0);\r\n\r\n    return {\r\n      ...state,\r\n      teamA: teamA,\r\n      teamB: teamB,\r\n    }\r\n  }\r\n  else {\r\n    return {\r\n      ...state,\r\n      numbersReached: true,\r\n    }\r\n  }\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_PLAYER\": return addPlayer(state, action);\r\n    case \"CREATE_TEAMS\": return createTeams(shufflePlayers(addPlayer(state, action)));\r\n    case \"RESET\": return { ...initialState };\r\n    default: return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","\r\nimport { createStore } from \"redux\";\r\nimport reducer from './reducer';\r\nimport initialState from './initialState';\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n);\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport App from './App';\nimport store from './data/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}